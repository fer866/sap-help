@mixin grid-flex-classes($size, $i, $perc) {
    &.order-#{$size}#{$i} {
        order: $i;
        -ms-flex-order: $i;
    }
    &.pull-#{$size}#{$i} {
        margin-right: $perc;
    }
    &.push-#{$size}#{$i} {
        margin-left: $perc;
    }
}

@mixin reset-offset {
    order: unset;
    -ms-flex-order: unset;
    margin-right: unset;
    margin-left: unset;
}

.row {
    &.no-m {
        margin-bottom: 0;
    }
    margin-bottom: 20px;
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    align-items: flex-start;

    .col {
        &.no-m {
            margin-bottom: 0;
        }
        box-sizing: border-box;
        padding: 0 math.div($gutter-width, 3);
        margin-bottom: $gutter-width;

        &[class*="push-"],
        &[class*="pull-"] {
          position: relative;
        }

        $i: 1;
        @while $i <= $num-cols {
        $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
            &.s#{$i} {
                width: $perc;
                flex: 0 1 $perc;
                -webkit-box-flex: 1;
                -ms-flex: 0 1 $perc;
                @include reset-offset;
            }
            $i: $i + 1;
        }

        $i: 1;
        @while $i <= $num-cols {
            $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
            @include grid-flex-classes('s', $i, $perc);
            $i: $i + 1;
        }
    
        @media #{$medium-and-up} {
            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                &.m#{$i} {
                    width: $perc;
                    flex: 0 1 $perc;
                    -webkit-box-flex: 1;
                    -ms-flex: 0 1 $perc;
                    @include reset-offset;
                }
                $i: $i + 1;
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                @include grid-flex-classes('m', $i, $perc);
                $i: $i + 1;
            }
        }
    
        @media #{$large-and-up} {
            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                &.l#{$i} {
                    width: $perc;
                    flex: 0 1 $perc;
                    -webkit-box-flex: 1;
                    -ms-flex: 0 1 $perc;
                    @include reset-offset;
                }
                $i: $i + 1;
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                @include grid-flex-classes('l', $i, $perc);
                $i: $i + 1;
            }
        }
    
        @media #{$extra-large-and-up} {
            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                &.xl#{$i} {
                    width: $perc;
                    flex: 0 1 $perc;
                    -webkit-box-flex: 1;
                    -ms-flex: 0 1 $perc;
                    @include reset-offset;
                }
                $i: $i + 1;
            }

            $i: 1;
            @while $i <= $num-cols {
                $perc: unquote((math.div(100, math.div($num-cols, $i))) + "%");
                @include grid-flex-classes('xl', $i, $perc);
                $i: $i + 1;
            }
        }
    }
}